{
  "name": "jan-app",
  "private": true,
  "workspaces": {
    "packages": [
      "joi",
      "core",
      "electron",
      "web",
      "server"
    ],
    "nohoist": [
      "joi",
      "core",
      "electron",
      "web",
      "server"
    ]
  },
  "scripts": {
    "lint": "concurrently \"yarn workspace jan lint\" \"yarn workspace @janhq/web lint\"",
    "test:unit": "jest",
    "test:coverage": "jest --coverage",
    "test": "cd electron && yarn run test:e2e",
    "test-local": "yarn run lint && yarn run build:test && yarn run test",
    "pre-install:darwin": "find extensions -type f -path \"**/*.tgz\" -exec cp {} pre-install \\;",
    "pre-install:linux": "find extensions -type f -path \"**/*.tgz\" -exec cp {} pre-install \\;",
    "pre-install:win32": "powershell -Command \"Get-ChildItem -Path \"extensions\" -Recurse -File -Filter \"*.tgz\" -Depth 1 | ForEach-Object { Copy-Item -Path $_.FullName -Destination \"pre-install\" }\"",
    "pre-install": "run-script-os",
    "copy:assets": "cpx \"pre-install/*.tgz\" \"electron/pre-install/\" && cpx \"themes/**\" \"electron/themes\" && cpx \"docs/openapi/**\" \"electron/docs/openapi\"",
    "predev": "yarn run build:core && yarn run build:joi && yarn run build:server",
    "prebuild": "yarn run build:core && yarn run build:joi && yarn run build:server",
    "dev:electron": "yarn copy:assets && yarn workspace jan dev",
    "dev:web": "yarn workspace @janhq/web dev",
    "dev:server": "yarn copy:assets && yarn workspace @janhq/server dev",
    "dev": "concurrently --kill-others \"yarn workspace @janhq/web dev\" \"yarn workspace jan dev\"",
    "build:server": "yarn copy:assets && cd server && (bun install --force || yarn install) && yarn build",
    "build:core": "cd core && (bun install --force || yarn install) && yarn run build",
    "build:web": "yarn workspace @janhq/web build && cpx \"web/out/**\" \"electron/renderer/\"",
    "build:electron": "yarn copy:assets && yarn workspace jan build",
    "build:electron:test": "yarn workspace jan build:test",
    "install:extensions:darwin:linux": "cd extensions && for dir in $(ls -d ./*/); do (echo $dir); done | xargs -I {} concurrently '\"cd {} && (bun install --force || yarn install) && turbo run build:publish\"'",
    "install:extensions:darwin:win32": "cd extensions && powershell -Command \"$args = (Get-ChildItem -Directory | Where-Object { $_.Name -like '*-extension' } | ForEach-Object { 'cd ' + $_.Name + ' && (bun install --force || yarn install) && yarn run build:publish' }); echo $args; concurrently $args\"",
    "install:extensions": "yarn build:core && run-script-os",
    "build:extensions": "rimraf --glob \"pre-install/*.tgz\" && yarn build:core && yarn install:extensions && yarn pre-install",
    "build:test": "yarn copy:assets && turbo run @janhq/web#build && cpx \"web/out/**\" \"electron/renderer/\" && turbo run build:test",
    "build": "yarn build:web && yarn build:electron",
    "build:publish": "yarn copy:assets && yarn build:web && cd electron && yarn build:publish",
    "dev:joi": "cd joi && (bun install --force || yarn install) && yarn dev",
    "build:joi": "cd joi && (bun install --force || yarn install) && yarn build",
    "prepare": "husky"
  },
  "devDependencies": {
    "concurrently": "^8.2.1",
    "cpx": "^1.5.0",
    "husky": "^9.1.5",
    "rimraf": "^3.0.2",
    "run-script-os": "^1.1.6",
    "wait-on": "^7.0.1"
  },
  "version": "0.0.0"
}
